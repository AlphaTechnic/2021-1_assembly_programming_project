Microsoft (R) Macro Assembler Version 14.28.29335.0	    06/14/21 15:50:13
Get frequencie						     Page 1 - 1


				TITLE Get frequencies
				;Make a program that functions as a simple Boolean calculator for 32-bit integers. 
				;It should display a menu that asks the user to make a selection from the following list:
				;   1. x AND y
				;   2. x OR y
				;   3. NOT x
				;   4. X XOR y
				;   5. Exit program
				;When the user makes a choice, call a procedure that displays the name of the operation about
				;to be performed. You must implement this procedure using the ***Table-Driven Selection***
				;technique, shown in Section 6.5.4 in textbook.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 41 41 45 42 44	    target byte "AAEBDCFBBC", 0 ; input data
	   43 46 42 42 43
	   00
 0000000B  00000100 [		    freqTable DWORD 256 DUP(0)
	    00000000
	   ]

 0000040B 31 2E 20 78 20	    prompt_menu byte   "1. x AND y", 0dh, 0ah,
	   41 4E 44 20 79
	   0D 0A 32 2E 20
	   78 20 4F 52 20
	   79 0D 0A 33 2E
	   20 4E 4F 54 20
	   78 0D 0A 34 2E
	   20 78 20 58 4F
	   52 20 79 0D 0A
	   35 2E 20 45 78
	   69 74 20 50 72
	   6F 67 72 61 6D
	   0D 0A 0D 0A 00
				                   "2. x OR y", 0dh, 0ah,
				                   "3. NOT x", 0dh, 0ah,
				                   "4. x XOR y", 0dh, 0ah,
				                   "5. Exit Program", 0dh, 0ah, 0dh, 0ah, 0
 0000044C 43 68 6F 6F 73	    prompt_choose byte "Choose Calculation Mode : ", 0
	   65 20 43 61 6C
	   63 75 6C 61 74
	   69 6F 6E 20 4D
	   6F 64 65 20 3A
	   20 00
 00000467 44 6F 20 79 6F	    prompt_modechange byte "Do you want to change the mode(Y/N)? : ", 0
	   75 20 77 61 6E
	   74 20 74 6F 20
	   63 68 61 6E 67
	   65 20 74 68 65
	   20 6D 6F 64 65
	   28 59 2F 4E 29
	   3F 20 3A 20 00
 0000048F 45 6E 74 65 72	    prompt_x byte "Enter x : ", 0
	   20 78 20 3A 20
	   00
 0000049A 45 6E 74 65 72	    prompt_y byte "Enter y : ", 0
	   20 79 20 3A 20
	   00
 000004A5 52 65 73 75 6C	    prompt_resultAND byte "Result of x AND y : ", 0
	   74 20 6F 66 20
	   78 20 41 4E 44
	   20 79 20 3A 20
	   00
 000004BA 52 65 73 75 6C	    prompt_resultOR byte "Result of x OR y : ", 0
	   74 20 6F 66 20
	   78 20 4F 52 20
	   79 20 3A 20 00
 000004CE 52 65 73 75 6C	    prompt_resultNOT byte "Result of NOT x : ", 0
	   74 20 6F 66 20
	   4E 4F 54 20 78
	   20 3A 20 00
 000004E1 52 65 73 75 6C	    prompt_resultXOR byte "Result of x XOR y : ", 0
	   74 20 6F 66 20
	   78 20 58 4F 52
	   20 79 20 3A 20
	   00
 000004F6 42 79 65 21 00	    prompt_bye byte "Bye!", 0

 000004FB 00000001		    CaseTable dword 1
 000004FF  000000B8 R		        dword and_func
 00000503
 = 00000008			        EntrySize = $ - CaseTable
				        
 00000503  00000002		        dword 2
 00000507  000000EA R		        dword or_func
 0000050B  00000003		        dword 3
 0000050F  0000011C R		        dword not_func
 00000513  00000004		        dword 4
 00000517  0000013D R		        dword xor_func
 0000051B  00000005		        dword 5
 0000051F  0000016F R		        dword exit_func
 00000523 = 00000005		    NumberOfEntries = ($ - CaseTable) / EntrySize

 = 00000014			    MAX_BUF_LEN = 20
 = 00000001			    MAX_VALID_INPUT_LEN = 1
 00000523 0000			    answer word 0
				    

 00000000			.code
 00000000			main PROC
 00000000  E8 00000000 E	    call Clrscr

 00000005			menu :
 00000005  E8 00000000 E	    call crlf
 0000000A  BA 0000040B R	    mov edx, offset prompt_menu
 0000000F  E8 00000000 E	    call writestring

 00000014			L1:
 00000014  BA 0000044C R	    mov edx, offset prompt_choose
 00000019  E8 00000000 E	    call writestring
				    
 0000001E  E8 00000000 E	    call readdec
 00000023  E8 00000019		    call validation
 00000028  75 EA		    jnz L1

 0000002A  50			    push eax ; mode ÀúÀå

 0000002B			exec_fun:
 0000002B  E8 00000025		    call choose_func ; returns selected item number in the al register
 00000030  E8 0000003C		    call check_answer;
 00000035  72 CE		    jc menu

 00000037			re_exec:
 00000037  58			    pop eax
 00000038  EB F1		    jmp exec_fun

				    exit
 00000041			main ENDP


				;-------------------------------------------------------------------------------
 00000041			validation proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 00000041  83 F8 01		    cmp eax, 1
 00000044  72 0E		    jb THEEND
 00000046  83 F8 05		    cmp eax, 5
 00000049  77 09		    ja THEEND

 0000004B  E8 00000000 E	    call crlf
 00000050  66| A9 0000		    test ax, 0  ; ZF¸¦ setÇÏ¿© ¿ÜºÎ·Î 'Á¤»óÀûÀÎ input'ÀÓÀ» ¾Ë·ÁÁÜ
 00000054			THEEND:
 00000054  C3			    ret
 00000055			validation endp


				;-------------------------------------------------------------------------------
 00000055			choose_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 00000055  BE 000004FB R	    mov esi, offset CaseTable
 0000005A  B9 00000005		    mov ecx, NumberOfEntries

 0000005F			L1:
 0000005F  3B 06		    cmp eax, [esi]
 00000061  75 05		    jne nxt

 00000063  FF 56 04		    call near ptr [esi + type CaseTable]
 00000066  EB 08		    jmp THEEND

 00000068			nxt:
 00000068  81 C6 00000008	    add esi, EntrySize
 0000006E  E2 EF		    loop L1

 00000070			THEEND:
 00000070  C3			    ret
 00000071			choose_func endp


				;-------------------------------------------------------------------------------
 00000071			check_answer proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 00000071  E8 00000000 E	    call crlf
 00000076  E8 00000000 E	    call crlf
 0000007B			L1:
 0000007B  BA 00000467 R	    mov edx, offset prompt_modechange
 00000080  E8 00000000 E	    call writestring

 00000085  BA 00000523 R	    mov edx, offset answer
 0000008A  B9 00000014		    mov ecx, MAX_BUF_LEN
 0000008F  E8 00000000 E	    call readstring
				    
 00000094  83 F8 01		    cmp eax, MAX_VALID_INPUT_LEN
 00000097  75 E2		    jne L1

 00000099  80 3A 59		    cmp byte ptr [edx], 59h
 0000009C  74 11		    je END_y
 0000009E  80 3A 79		    cmp byte ptr [edx], 79h
 000000A1  74 0C		    je END_y
 000000A3  80 3A 4E		    cmp byte ptr [edx], 4Eh
 000000A6  74 09		    je END_n
 000000A8  80 3A 6E		    cmp byte ptr [edx], 6Eh
 000000AB  74 04		    je END_n
 000000AD  EB CC		    jmp L1

 000000AF			END_y:
 000000AF  F9			    stc     ; set CF = 1 -> change mode
 000000B0  C3			    ret
 000000B1			END_n:
 000000B1  E8 00000000 E	    call crlf
 000000B6  F8			    clc     ; set CF = 0 -> not change mode
 000000B7  C3			    ret
 000000B8			check_answer endp




				;-------------------------------------------------------------------------------
 000000B8			and_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 000000B8  BA 0000048F R	    mov edx, offset prompt_x
 000000BD  E8 00000000 E	    call writestring
 000000C2  E8 00000000 E	    call Readhex
 000000C7  8B D8		    mov ebx, eax ; edx : x buffer

 000000C9  BA 0000049A R	    mov edx, offset prompt_y
 000000CE  E8 00000000 E	    call writestring
 000000D3  E8 00000000 E	    call Readhex ; eax : y buffer

 000000D8  BA 000004A5 R	    mov edx, offset prompt_resultAND
 000000DD  E8 00000000 E	    call writestring
				    
				    ;calculate
 000000E2  23 C3		    and eax, ebx;
 000000E4  E8 00000000 E	    call writehex

 000000E9			THEEND:
 000000E9  C3			    ret

 000000EA			and_func endp

				;-------------------------------------------------------------------------------
 000000EA			or_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 000000EA  BA 0000048F R	    mov edx, offset prompt_x
 000000EF  E8 00000000 E	    call writestring
 000000F4  E8 00000000 E	    call Readhex
 000000F9  8B D8		    mov ebx, eax ; edx : x buffer

 000000FB  BA 0000049A R	    mov edx, offset prompt_y
 00000100  E8 00000000 E	    call writestring
 00000105  E8 00000000 E	    call Readhex ; eax : y buffer

 0000010A  BA 000004A5 R	    mov edx, offset prompt_resultAND
 0000010F  E8 00000000 E	    call writestring
				    
				    ;calculate
 00000114  0B C3		    or eax, ebx;
 00000116  E8 00000000 E	    call writehex

 0000011B			THEEND:
 0000011B  C3			    ret
 0000011C			or_func endp

				;-------------------------------------------------------------------------------
 0000011C			not_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 0000011C  BA 0000048F R	    mov edx, offset prompt_x
 00000121  E8 00000000 E	    call writestring
 00000126  E8 00000000 E	    call Readhex

 0000012B  BA 000004CE R	    mov edx, offset prompt_resultNOT
 00000130  E8 00000000 E	    call writestring

				    ;calculate
 00000135  F7 D0		    not eax;
 00000137  E8 00000000 E	    call writehex

 0000013C			THEEND:
 0000013C  C3			    ret
 0000013D			not_func endp

				;-------------------------------------------------------------------------------
 0000013D			xor_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
 0000013D  BA 0000048F R	    mov edx, offset prompt_x
 00000142  E8 00000000 E	    call writestring
 00000147  E8 00000000 E	    call Readhex
 0000014C  8B D8		    mov ebx, eax ; edx : x buffer

 0000014E  BA 0000049A R	    mov edx, offset prompt_y
 00000153  E8 00000000 E	    call writestring
 00000158  E8 00000000 E	    call Readhex ; eax : y buffer

 0000015D  BA 000004A5 R	    mov edx, offset prompt_resultAND
 00000162  E8 00000000 E	    call writestring
				    
				    ;calculate
 00000167  33 C3		    xor eax, ebx;
 00000169  E8 00000000 E	    call writehex

 0000016E			THEEND:
 0000016E  C3			    ret
 0000016F			xor_func endp

				;-------------------------------------------------------------------------------
 0000016F			exit_func proc
				; Display the string input by data segment.
				;-------------------------------------------------------------------------------
				    exit
 00000176			exit_func endp

				END main
Microsoft (R) Macro Assembler Version 14.28.29335.0	    06/14/21 15:50:13
Get frequencie						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000525 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000176 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
and_func . . . . . . . . . . . .	P Near	 000000B8 _TEXT	Length= 00000032 Public STDCALL
  THEEND . . . . . . . . . . . .	L Near	 000000E9 _TEXT	
check_answer . . . . . . . . . .	P Near	 00000071 _TEXT	Length= 00000047 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000007B _TEXT	
  END_y  . . . . . . . . . . . .	L Near	 000000AF _TEXT	
  END_n  . . . . . . . . . . . .	L Near	 000000B1 _TEXT	
choose_func  . . . . . . . . . .	P Near	 00000055 _TEXT	Length= 0000001C Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000005F _TEXT	
  nxt  . . . . . . . . . . . . .	L Near	 00000068 _TEXT	
  THEEND . . . . . . . . . . . .	L Near	 00000070 _TEXT	
exit_func  . . . . . . . . . . .	P Near	 0000016F _TEXT	Length= 00000007 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000041 Public STDCALL
  menu . . . . . . . . . . . . .	L Near	 00000005 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 00000014 _TEXT	
  exec_fun . . . . . . . . . . .	L Near	 0000002B _TEXT	
  re_exec  . . . . . . . . . . .	L Near	 00000037 _TEXT	
not_func . . . . . . . . . . . .	P Near	 0000011C _TEXT	Length= 00000021 Public STDCALL
  THEEND . . . . . . . . . . . .	L Near	 0000013C _TEXT	
or_func  . . . . . . . . . . . .	P Near	 000000EA _TEXT	Length= 00000032 Public STDCALL
  THEEND . . . . . . . . . . . .	L Near	 0000011B _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
validation . . . . . . . . . . .	P Near	 00000041 _TEXT	Length= 00000014 Public STDCALL
  THEEND . . . . . . . . . . . .	L Near	 00000054 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
xor_func . . . . . . . . . . . .	P Near	 0000013D _TEXT	Length= 00000032 Public STDCALL
  THEEND . . . . . . . . . . . .	L Near	 0000016E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CaseTable  . . . . . . . . . . .	DWord	 000004FB _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
EntrySize  . . . . . . . . . . .	Number	 00000008h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAX_BUF_LEN  . . . . . . . . . .	Number	 00000014h   
MAX_VALID_INPUT_LEN  . . . . . .	Number	 00000001h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
NumberOfEntries  . . . . . . . .	Number	 00000005h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
answer . . . . . . . . . . . . .	Word	 00000523 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
freqTable  . . . . . . . . . . .	DWord	 0000000B _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
prompt_bye . . . . . . . . . . .	Byte	 000004F6 _DATA	
prompt_choose  . . . . . . . . .	Byte	 0000044C _DATA	
prompt_menu  . . . . . . . . . .	Byte	 0000040B _DATA	
prompt_modechange  . . . . . . .	Byte	 00000467 _DATA	
prompt_resultAND . . . . . . . .	Byte	 000004A5 _DATA	
prompt_resultNOT . . . . . . . .	Byte	 000004CE _DATA	
prompt_resultOR  . . . . . . . .	Byte	 000004BA _DATA	
prompt_resultXOR . . . . . . . .	Byte	 000004E1 _DATA	
prompt_x . . . . . . . . . . . .	Byte	 0000048F _DATA	
prompt_y . . . . . . . . . . . .	Byte	 0000049A _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
target . . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
