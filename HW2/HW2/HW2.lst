Microsoft (R) Macro Assembler Version 14.28.29335.0	    05/31/21 02:44:03
: Pattern matchin					     Page 1 - 1


				TITLE : Pattern matching

				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 54 79 70 65 5F		prompt1 byte "Type_A_String : ", 0
	   41 5F 53 74 72
	   69 6E 67 20 3A
	   20 00
 00000011 41 5F 57 6F 72		prompt2 byte "A_Word_for_Search : ", 0
	   64 5F 66 6F 72
	   5F 53 65 61 72
	   63 68 20 3A 20
	   00
 00000026 43 68 61 6E 67		prompt3 byte "Changed : ", 0
	   65 64 20 3A 20
	   00
 00000031 46 6F 75 6E 64		ans1 byte "Found", 0
	   00
 00000037 4E 6F 74 20 46		ans2 byte "Not Found", 0
	   6F 75 6E 64 00

 = 00000028				MAX = 40
 00000041  0000002D [			text byte 45 DUP(?)
	    00
	   ]
 0000006E  0000002D [			pat byte 45 dup(?)
	    00
	   ]
 0000009B 00000000			lenoftext dword 0
 0000009F 00000000			lenofpat dword 0
 000000A3 00000000			ans_esi dword 0						; text 내에 pat이 위치한 그 다음 byte 주소를 저장

 00000000			.code
 00000000			main proc
 00000000			L0:
					; prompt1 출력
 00000000  BA 00000000 R		mov edx, offset prompt1
 00000005  E8 00000000 E		call Writestring

					; text 입력받음
 0000000A  BA 00000041 R		mov edx, offset text
 0000000F  B9 00000032			mov ecx, 50
 00000014  E8 00000000 E		call readstring
 00000019  0F 84 00000113		jz THEEND							; enter key - 종료조건

 0000001F  E8 00000000 E		call Crlf
 00000024  A3 0000009B R		mov lenoftext, eax					; text 길이 저장
					

					; prompt2 출력
 00000029  BA 00000011 R		mov edx, offset prompt2
 0000002E  E8 00000000 E		call Writestring

					; pat 입력받음
 00000033  BA 0000006E R		mov edx, offset pat
 00000038  B9 00000032			mov ecx, 50
 0000003D  E8 00000000 E		call readstring
 00000042  0F 84 000000EA		jz THEEND							; enter key - 종료조건

 00000048  E8 00000000 E		call Crlf
 0000004D  A3 0000009F R		mov lenofpat, eax					; pattern 길이 저장


				;-------------------------------------------------------------------------------
				; 문자열 일치를 판단하는 알고리즘의 type을 3가지로 분류하고, 각각에 해당하는 proc을 작성 
				; firstfind - text의 가장 첫 부분에서 matching이 되는 경우
				;			- [pattern->20h(space)]의 구조가 text에 있다면, true로 판단한다.
				; middlefind - text의 중간 부분에서 matching이 되는 경우
				;			 - [20h->pattern->20h]의 구조가 text에 있다면, true로 판단한다.
				; lastfind - text의 마지막 부분에서 matching이 되는 경우
				;		   - [20h->pattern]의 구조가 text에 있다면, true로 판단한다.
				;-------------------------------------------------------------------------------

 00000052  8B C8			mov ecx, eax						; ecx holds a len(pat)
 00000054  BE 00000041 R		mov esi, offset text				; esi - text 탐색용도
 00000059  BF 0000006E R		mov edi, offset pat					; edi - pat 탐색용도

 0000005E			FIRST:
 0000005E  E8 000000D6			call firstfind
 00000063  83 F8 01			cmp eax, 1							; eax - firstfind 함수 수행의 true / false 여부가 저장됨
 00000066  74 36			je ok

 00000068  80 7E 01 00			cmp byte ptr [esi + 1], 0			; firstfind 수행만으로 text의 모든 문자열 탐색을 마친 경우 
 0000006C  0F 84 00000089		je fail

 00000072  8B 15 0000009B R		mov edx, lenoftext
 00000078  2B D1			sub edx, ecx						; edx holds len(text) - len(pat) : loop counter로 기능하게 함

 0000007A			MIDDLE:
 0000007A  E8 000000F8			call middlefind						
 0000007F  83 F8 01			cmp eax, 1							; eax - middlefind 함수 수행의 true / false 여부가 저장됨
 00000082  74 1A			je ok

 00000084  83 C6 01			add esi, 1							; esi 증가
 00000087  83 EA 01			sub edx, 1							; edx(loop counter) 1 감소
 0000008A  83 FA 00			cmp edx, 0
 0000008D  75 EB			jne MIDDLE

 0000008F			LAST:
 0000008F  83 EE 01			sub esi, 1
 00000092  E8 0000011C			call lastfind
 00000097  83 F8 01			cmp eax, 1
 0000009A  74 02			je ok

 0000009C  EB 5D			jmp fail
				;-------------------------------------------------------------------------------

 0000009E			ok:
					; ans1 출력
 0000009E  BA 00000031 R		mov edx, offset ans1
 000000A3  E8 00000000 E		call Writestring
 000000A8  E8 00000000 E		call crlf
 000000AD  E8 00000000 E		call crlf

					; changed prompt 출력
 000000B2  BA 00000026 R		mov edx, offset prompt3
 000000B7  E8 00000000 E		call Writestring


				;-------------------------------------------------------------------------------
				; text내에 위치한 pat을 삭제한다.
				; ans_esi에 위치한 char을 ans_esi - len(pat) 위치에 옮긴다.
				; ans_esi를 1 올려, 같은 작업을 반복한다. (text의 끝에 위치한 null char를 옮길 때까지)
				;-------------------------------------------------------------------------------
 000000BC  8B 3D 000000A3 R		mov edi, ans_esi	
 000000C2  8B F7			mov esi, edi
					
 000000C4  8B 1D 0000009F R		mov ebx, [lenofpat]
 000000CA  2B F3			sub esi, ebx						; esi holds ans_esi - len(pat)
 000000CC  83 C7 01			add edi, 1							; edi holds ans_esi + 1

 000000CF			MOVE_CHAR:
 000000CF  8A 07			mov al, byte ptr [edi]
 000000D1  88 06			mov byte ptr [esi], al
 000000D3  83 C6 01			add esi, 1
 000000D6  83 C7 01			add edi, 1
					
 000000D9  80 3F 00			cmp byte ptr [edi], 0				; edi가 가리키는 값이 null char이 되면 loop 종료
 000000DC  75 F1			jne MOVE_CHAR
 000000DE			L3:
 000000DE  8A 07			mov al, byte ptr [edi]
 000000E0  88 06			mov byte ptr [esi], al				; null char까지 옮겨준다.


					; 삭제를 완료한 text 출력
 000000E2  BA 00000041 R		mov edx, offset text
 000000E7  E8 00000000 E		call Writestring
 000000EC  E8 00000000 E		call crlf
 000000F1  E8 00000000 E		call crlf 

 000000F6  E9 FFFFFF05			jmp L0								; 다시 사용자의 입력을 기다린다.


 000000FB			fail:
					; ans2 출력
 000000FB  BA 00000037 R		mov edx, offset ans2
 00000100  E8 00000000 E		call Writestring
 00000105  E8 00000000 E		call crlf
 0000010A  E8 00000000 E		call crlf 

					; changed prompt 와 text(변화 없음) 출력
 0000010F  BA 00000026 R		mov edx, offset prompt3
 00000114  E8 00000000 E		call Writestring
 00000119  BA 00000041 R		mov edx, offset text
 0000011E  E8 00000000 E		call Writestring
 00000123  E8 00000000 E		call crlf
 00000128  E8 00000000 E		call crlf 

 0000012D  E9 FFFFFECE			jmp L0								; 다시 사용자의 입력을 기다린다.


 00000132			THEEND:
					exit
 00000139			main ENDP



				;-------------------------------------------------------------------------------
				; firstfind - text의 가장 첫 부분에서 matching이 되는 경우
				;			- [pattern->20h(space)]의 구조가 text에 있다면, true로 판단한다.
				; Recieves - esi(text의 가장 첫 부분), edi(pat의 가장 첫부분)
				; Returns -  eax (매칭 성공 여부 true / false)
				;-------------------------------------------------------------------------------
 00000139			firstfind PROC
 00000139  56				push esi
 0000013A  57				push edi
 0000013B  51				push ecx
					
 0000013C			L1:
 0000013C  66| BB 0000			mov bx, 00
 00000140  8A 3E			mov bh, byte ptr [esi]				; bh와 bl에 char를 옮겨와 비교
 00000142  8A 1F			mov bl, byte ptr [edi]
 00000144  83 C6 01			add esi, 1
 00000147  83 C7 01			add edi, 1
					
 0000014A  3A FB			cmp bh, bl							; bh와 bl이 다르다면 false
 0000014C  75 11			jne F		
 0000014E  83 F9 00			cmp ecx, 0							; 조건1. pattern in text
 00000151  74 02			je nxt
 00000153  E2 E7			loop L1

 00000155			nxt:
 00000155  80 3E 20			cmp byte ptr [esi], 20h				; 조건2. pattern->20h(space)의 구조
 00000158  74 0E			je T
 0000015A			nxt2:
 0000015A  80 3E 00			cmp byte ptr [esi], 0				; 조건2. 혹은 null char가 있는 경우
 0000015D  74 09			je T

 0000015F			F:
 0000015F  B8 00000000			mov eax, 0							; 함수 수행의 결과를 eax에 기록

 00000164  59				pop ecx
 00000165  5F				pop edi
 00000166  5E				pop esi
 00000167  C3				ret
 00000168			T:
 00000168  B8 00000001			mov eax, 1							; 함수 수행의 결과를 eax에 기록
 0000016D  89 35 000000A3 R		mov ans_esi, esi					; pattern이 매칭된 부분 다음 자리를 ans_esi에 기록

 00000173  59				pop ecx
 00000174  5F				pop edi
 00000175  5E				pop esi
 00000176  C3				ret
 00000177			firstfind ENDP
				;---------------------------------------------------------


				;-------------------------------------------------------------------------------
				; middlefind - text의 중간 부분에서 matching이 되는 경우
				;			 - [20h->pattern->20h]의 구조가 text에 있다면, true로 판단한다.
				; Recieves - esi(text의 중간 어딘가), edi(pat의 가장 첫부분)
				; Returns -  eax (매칭 성공 여부 true / false)
				;-------------------------------------------------------------------------------
 00000177			middlefind PROC
 00000177  56				push esi
 00000178  57				push edi
 00000179  51				push ecx

 0000017A  80 3E 20			cmp byte ptr [esi], 20h				; 조건1. esi 위치에 20h(space)가 있을 것
 0000017D  75 1C			jne F
 0000017F  83 C6 01			add esi, 1
					
 00000182			L1:
 00000182  66| BB 0000			mov bx, 00							
 00000186  8A 3E			mov bh, byte ptr [esi]				
 00000188  8A 1F			mov bl, byte ptr [edi]
 0000018A  83 C6 01			add esi, 1
 0000018D  83 C7 01			add edi, 1
					
 00000190  3A FB			cmp bh, bl							; 조건2. pattern in text
 00000192  75 07			jne F
 00000194  E2 EC			loop L1

 00000196			nxt:
 00000196  80 3E 20			cmp byte ptr [esi], 20h				; 조건3. pattern 뒤에 20h(space)
 00000199  74 09			je T

 0000019B			F:
 0000019B  B8 00000000			mov eax, 0							; 함수 수행의 결과를 eax에 기록

 000001A0  59				pop ecx
 000001A1  5F				pop edi
 000001A2  5E				pop esi
 000001A3  C3				ret
 000001A4			T:
 000001A4  B8 00000001			mov eax, 1							; 함수 수행의 결과를 eax에 기록
 000001A9  89 35 000000A3 R		mov ans_esi, esi					; pattern이 매칭된 부분 다음 자리를 ans_esi에 기록

 000001AF  59				pop ecx
 000001B0  5F				pop edi
 000001B1  5E				pop esi
 000001B2  C3				ret
 000001B3			middlefind ENDP
				;-------------------------------------------------------------------------------


				;-------------------------------------------------------------------------------
				; lastfind - text의 마지막 부분에서 matching이 되는 경우
				;		   - [20h->pattern]의 구조가 text에 있다면, true로 판단한다.
				; Recieves - esi(text - len(pat) - 1), edi(pat의 가장 첫부분)
				; Returns -  eax (매칭 성공 여부 true / false)
				;-------------------------------------------------------------------------------
 000001B3			lastfind PROC
 000001B3  56				push esi
 000001B4  57				push edi
 000001B5  51				push ecx

 000001B6  80 3E 20			cmp byte ptr [esi], 20h				; 조건1. esi 위치에 20h(space)가 있을 것
 000001B9  75 1C			jne F
 000001BB  83 C6 01			add esi, 1
					
 000001BE			L1:
 000001BE  66| BB 0000			mov bx, 00
 000001C2  8A 3E			mov bh, byte ptr [esi]
 000001C4  8A 1F			mov bl, byte ptr [edi]
 000001C6  83 C6 01			add esi, 1
 000001C9  83 C7 01			add edi, 1
					
 000001CC  3A FB			cmp bh, bl							; 조건2. pattern in text
 000001CE  75 07			jne F
 000001D0  83 F9 01			cmp ecx, 1
 000001D3  74 0B			je T
 000001D5  E2 E7			loop L1


 000001D7			F:
 000001D7  B8 00000000			mov eax, 0							; 함수 수행의 결과를 eax에 기록

 000001DC  59				pop ecx
 000001DD  5F				pop edi
 000001DE  5E				pop esi
 000001DF  C3				ret
 000001E0			T:
 000001E0  B8 00000001			mov eax, 1							; 함수 수행의 결과를 eax에 기록
 000001E5  89 35 000000A3 R		mov ans_esi, esi					; pattern이 매칭된 부분 다음 자리를 ans_esi에 기록

 000001EB  59				pop ecx
 000001EC  5F				pop edi
 000001ED  5E				pop esi
 000001EE  C3				ret
 000001EF			lastfind ENDP
				;---------------------------------------------------------

				END main
Microsoft (R) Macro Assembler Version 14.28.29335.0	    05/31/21 02:44:03
: Pattern matchin					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000A7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001EF Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
firstfind  . . . . . . . . . . .	P Near	 00000139 _TEXT	Length= 0000003E Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000013C _TEXT	
  nxt  . . . . . . . . . . . . .	L Near	 00000155 _TEXT	
  nxt2 . . . . . . . . . . . . .	L Near	 0000015A _TEXT	
  F  . . . . . . . . . . . . . .	L Near	 0000015F _TEXT	
  T  . . . . . . . . . . . . . .	L Near	 00000168 _TEXT	
lastfind . . . . . . . . . . . .	P Near	 000001B3 _TEXT	Length= 0000003C Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000001BE _TEXT	
  F  . . . . . . . . . . . . . .	L Near	 000001D7 _TEXT	
  T  . . . . . . . . . . . . . .	L Near	 000001E0 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000139 Public STDCALL
  L0 . . . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  FIRST  . . . . . . . . . . . .	L Near	 0000005E _TEXT	
  MIDDLE . . . . . . . . . . . .	L Near	 0000007A _TEXT	
  LAST . . . . . . . . . . . . .	L Near	 0000008F _TEXT	
  ok . . . . . . . . . . . . . .	L Near	 0000009E _TEXT	
  MOVE_CHAR  . . . . . . . . . .	L Near	 000000CF _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000000DE _TEXT	
  fail . . . . . . . . . . . . .	L Near	 000000FB _TEXT	
  THEEND . . . . . . . . . . . .	L Near	 00000132 _TEXT	
middlefind . . . . . . . . . . .	P Near	 00000177 _TEXT	Length= 0000003C Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000182 _TEXT	
  nxt  . . . . . . . . . . . . .	L Near	 00000196 _TEXT	
  F  . . . . . . . . . . . . . .	L Near	 0000019B _TEXT	
  T  . . . . . . . . . . . . . .	L Near	 000001A4 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAX  . . . . . . . . . . . . . .	Number	 00000028h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ans1 . . . . . . . . . . . . . .	Byte	 00000031 _DATA	
ans2 . . . . . . . . . . . . . .	Byte	 00000037 _DATA	
ans_esi  . . . . . . . . . . . .	DWord	 000000A3 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lenofpat . . . . . . . . . . . .	DWord	 0000009F _DATA	
lenoftext  . . . . . . . . . . .	DWord	 0000009B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
pat  . . . . . . . . . . . . . .	Byte	 0000006E _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00000011 _DATA	
prompt3  . . . . . . . . . . . .	Byte	 00000026 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
text . . . . . . . . . . . . . .	Byte	 00000041 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
